apply plugin: 'com.android.application'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.3.1'
    }
}

repositories {
    // Required because retrolambda is on maven central
    mavenCentral()
    maven { url 'https://maven.google.com' }
}

apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'me.tatarka.retrolambda'
android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'
    compileOptions.incremental = false

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['autovaluegson.defaultCollectionsToEmpty': 'true']
            }
        }

        multiDexEnabled true
        applicationId "com.altieri.weatherapp"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1

        versionName "0.1"
        vectorDrawables.useSupportLibrary = true
        jackOptions {
            enabled false
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        dexOptions {
            preDexLibraries = false
            javaMaxHeapSize "4g"
        }
    }

    compileOptions {
        incremental true
    }

    /**
     * Signing keys config.
     */
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            keyAlias "key"
            storePassword "appweather"
            keyPassword "appweather"
        }
        release {
            storeFile file("release.keystore")
            keyAlias "key"
            storePassword "appweather"
            keyPassword "appweather"
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            renderscriptDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            minifyEnabled false
            versionNameSuffix "_dev"
        }
    }
}

def jsr250_api = '1.0'
def multidex = '1.0.1'
def supportVersion = '25.3.1'
def daggerVer = '2.11'
def rxbinding = '2.0.0'
def retrofit2 = '2.3.0'
def okhttp3 = '3.4.1'
def autovalue = '1.4'
def autovalueparcel = '0.2.5'
def autovaluegson = '0.4.5'
def auto_value_with = '1.0.0'
def glide = '3.7.0'

def hamcrestVersion = '1.3'
def espresso_core = '2.2.2'
def mockito_core = '1.10.19'
def junit = '4.12'

dependencies {
    compile "com.google.dagger:dagger:$daggerVer"
    compile "com.google.dagger:dagger-android-support:$daggerVer"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVer"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVer"

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:multidex:$multidex"

    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:support-annotations:$supportVersion"
    compile "com.android.support:preference-v7:$supportVersion"
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:support-vector-drawable:$supportVersion"
    compile "com.android.support:palette-v7:$supportVersion"

    compile "com.jakewharton.rxbinding2:rxbinding:$rxbinding"
    compile "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxbinding"
    compile "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxbinding"
    compile "com.jakewharton.rxbinding2:rxbinding-design:$rxbinding"
    compile "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$rxbinding"
    compile "com.jakewharton.rxbinding2:rxbinding-leanback-v17:$rxbinding"

    compile "com.squareup.retrofit2:retrofit:$retrofit2"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit2"
    compile "com.squareup.retrofit2:converter-gson:$retrofit2"
    compile "com.squareup.retrofit2:converter-scalars:$retrofit2"
    compile "com.squareup.okhttp3:okhttp:$okhttp3"
    compile "com.squareup.okhttp3:okhttp-urlconnection:$okhttp3"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp3"

    provided "com.google.auto.value:auto-value:$autovalue"
    annotationProcessor "com.google.auto.value:auto-value:$autovalue"
    annotationProcessor "com.gabrielittner.auto.value:auto-value-with:$auto_value_with"
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:$autovalueparcel"
    compile "com.ryanharter.auto.value:auto-value-parcel-adapter:$autovalueparcel"
    annotationProcessor "com.ryanharter.auto.value:auto-value-gson:$autovaluegson"
    provided "com.ryanharter.auto.value:auto-value-gson:$autovaluegson"

    compile "com.github.bumptech.glide:glide:$glide"

    provided "javax.annotation:jsr250-api:$jsr250_api"

    //other dependencies for testing
    testCompile "org.hamcrest:hamcrest-core:$hamcrestVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testCompile "org.hamcrest:hamcrest-integration:$hamcrestVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espresso_core", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile "org.mockito:mockito-core:$mockito_core"
    testCompile "junit:junit:$junit"
    compile 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0-RC2'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-v4:25.3.1'
}

android.packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/rxjava.properties'

}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$supportVersion"
            }
        }
    }
}
